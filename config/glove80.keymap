/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// Layers
#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    macros {
        ctrl_shift: ctrl_shift {
            label = "CTRL_SHIFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL>, <&macro_press &kp LSHFT>;
        };
    };

    behaviors {
        backspace_hold_tap: backspace_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "Backspace Hold-Tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>; // Adjust if needed
            bindings = <&kp BSPC>, <&ctrl_shift>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
                &kp F1    &kp F2     &kp F3    &kp F4    &kp F5
                &kp F6    &kp F7     &kp F8    &kp F9    &kp F10
                &kp EQUAL &kp N1     &kp N2    &kp N3    &kp N4  &kp N5
                &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
                &kp TAB   &kp Q      &kp W     &kp E     &kp R   &kp T
                &kp Y     &kp U      &kp I     &kp O     &kp P   &kp BSLH
                &kp ESC   &kp A      &kp S     &kp D     &kp F   &kp G
                &kp H     &kp J      &kp K     &kp L     &kp SEMI &kp SQT
                &kp GRAVE &kp Z      &kp X     &kp C     &kp V   &kp B
                &kp LSHFT &kp LCTRL  &lower  &kp LGUI  &kp RCTRL  &kp RSHFT
                &kp N     &kp M      &kp COMMA &kp DOT  &kp FSLH &kp PG_UP
                &magic Magic 0 &kp HOME  &kp LCTRL &kp LALT &kp LGUI
                &backspace_hold_tap &kp DEL &kp LALT &kp RALT &kp RET
                &kp SPACE &kp RGUI &kp RALT &kp LBKT &kp RBKT &kp PG_DN
            >;
        };

        // Define other layers as needed
    };
};
